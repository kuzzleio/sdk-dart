name: Deployment Doc Dev

on:
  push:
    branches:
      - 1-dev
      - 2-dev
      - 3-dev

jobs:
  doc-snippets:
    name: Doc Snippets
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: "12"
      - uses: ./.github/actions/doc-snippets

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: cedx/setup-dart@v2
      - uses: ./.github/actions/unit-tests

  dart-doc:
    name: Generate DartDoc
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: cedx/setup-dart@v2
      - uses: ./.github/actions/dart-doc

  doc-deploy:
    name: Deploy Doc to NEXT
    runs-on: ubuntu-latest
    needs: [doc-snippets, unit-tests]
    steps:
      - name: Extract version from context
        shell: bash
        id: extract-version
        run: echo "::set-output name=version::$(echo $GITHUB_REF | sed -n 's/refs\/heads\/\(.\)-dev/\1/p')"
      - name: Extract branch name from context
        shell: bash
        id: extract-branch
        run: echo "::set-output name=branch::$(echo $GITHUB_REF | sed -n 's/refs\/heads\/\(.*\)/\1/p')"
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: kuzzleio
          repo: documentation
          github_token: ${{ secrets.ACCESS_TOKEN_CI }}
          workflow_file_name: child_repo.workflow.yml
          ref: gha-ci
          inputs: '{"repo_name": "sdk-dart", "branch": "${{ steps.extract-branch.outputs.branch }}", "version": "${{ steps.extract-version.outputs.version }}"}'
